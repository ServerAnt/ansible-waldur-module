# -*- coding: utf-8; indent-tabs-mode: nil; tab-width: 2; -*-

---
- name: Get an OpenStack instance
  connection: local
  hosts: localhost
  roles:
    - connection

- name: Install requested python packages in the virtual environment
  hosts: vm_instance_to_configure
  become: yes
  become_user: "{{default_system_user}}"
  tasks:
    # we need to know what packages are installed before performing any modifications for proper failure recovery
    - name: check if virtual environment is created
      stat:
        path: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}"
      register: virtual_env_path

    - name: list all installed packages before applying modifications
      shell: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}/bin/pip freeze"
      args:
        executable: /bin/bash
      when: virtual_env_path.stat.isdir is defined and virtual_env_path.stat.isdir

    - name: create the initial virtualenv if it does not exist
      command: virtualenv "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}" -p python3
      when: not virtual_env_path.stat.exists

    # remove comes first so that it would be possible to reinstall some package, potentially with different version
    - name: Remove libraries
      pip:
        name: "{{item.name}}"
        version: "{{item.version}}"
        state: absent
        virtualenv: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}"
        virtualenv_python: python3
      with_items: "{{libraries_to_remove}}"
      when: libraries_to_remove is defined

    - name: Build requirements.txt file for pip and upload it to the instance
      template:
        src: templates/pip_requirements.j2
        dest: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/waldur_pip_requirements.txt"
      when: libraries_to_install is defined

    - name: Install libraries
      pip:
        requirements: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/waldur_pip_requirements.txt"
        virtualenv: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}"
        virtualenv_python: python3
      when: libraries_to_install is defined

    # NB! Name is important for backend logic!
    - name: Final list of all installed libraries in the venv
      shell: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/{{virtual_env_name}}/bin/pip freeze"
      args:
        executable: /bin/bash

    - name: Remove pip requirements.txt file
      file:
        state: absent
        path: "/home/{{default_system_user}}/{{virtual_envs_dir_path}}/waldur_pip_requirements.txt"
      when: libraries_to_install is defined