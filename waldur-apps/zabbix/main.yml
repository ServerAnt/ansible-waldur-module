# -*- coding: utf-8; indent-tabs-mode: nil; tab-width: 2; -*-

---
- name: Start VM instances
  connection: local
  hosts: localhost
  tasks:
    - name: Start VM instances
      waldur_os_instance:
        access_token: "{{ access_token }}"
        api_url: "{{ api_url }}"
        data_volume_size: 1
        flavor_min_cpu: 1
        flavor_min_ram: 1024
        floating_ip: auto
        image: centos7-minimal-1707
        name: Zabbix on Waldur
        project: "{{ project_uuid }}"
        provider: "{{ provider_uuid }}"
        security_groups:
          - default
          - ping
          - ssh
          - web
        ssh_key: "{{ public_key_uuid }}"
        subnet: "{{ subnet_uuid }}"
        system_volume_size: 10
        tags: "{{ tags }}"
        wait: true
      register: vm_instance

    - name: Set instance facts
      set_fact:
        public_ip: "{{ vm_instance.instance.external_ips.0 }}"
      when: not ansible_check_mode

    - name: Add instance to dynamic inventory
      add_host:
        ansible_ssh_private_key_file: "{{ private_key_path }}"
        ansible_ssh_user: centos
        groups: created_vm_instances
        hostname: "{{ public_ip }}"
      when: not ansible_check_mode

    - name: Get SSH public key data
      uri:
        headers:
          Authorization: "Token {{ access_token }}"
        url: "{{ api_url }}keys/{{ user_key_uuid }}/"
      register: key_data
      when: not ansible_check_mode

    - name: Set SSH public key fact
      set_fact:
        public_key: "{{ key_data.json.public_key }}"
      when: not ansible_check_mode

    - name: Wait for instance to respond to SSH
      wait_for:
        delay: 10
        host: "{{ public_ip }}"
        port: 22
      when: not ansible_check_mode


- name: Add SSH public key to instance authorized keys
  become: yes
  hosts: created_vm_instances
  tasks:
    - name: Add SSH public key to instance authorized keys
      authorized_key:
        key: "{{ hostvars.localhost.public_key }}"
        state: present
        user: centos


- name: Install Zabbix server
  hosts: created_vm_instances
  become: true
  tasks:
    - name: Install Apache2 and MariaDB
      package: pkg={{ item }} state=latest
      with_items:
        - httpd
        - mariadb-server
        - MySQL-python

    - name: Install Zabbix Repo
      yum:
        name: http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-1.el7.centos.noarch.rpm
        state: present

    - name: Install Zabbix
      package: pkg={{ item }} state=latest
      with_items:
        - zabbix-server-mysql
        - zabbix-web-mysql

    - name: Enable and start services
      service:
        enabled: yes
        name: "{{ item }}"
        state: started
      with_items:
        - mariadb
        - httpd

    - name: Create Zabbix database
      mysql_db:
        name: zabbix

    - name: Create Zabbix database user
      mysql_user:
        name: zabbix
        password: "{{ db_password | default('zabbix') }}"
        priv: zabbix.*:ALL

    - name: Create DB Scheme
      shell: "zcat /usr/share/doc/zabbix-server-mysql-*/create.sql.gz | mysql -uzabbix zabbix -p{{ db_password | default('zabbix') }}"

    - name: Configure Apache2
      lineinfile:
        path: /etc/httpd/conf.d/zabbix.conf
        regexp: "# php_value date.timezone Europe/Riga"
        line: "php_value date.timezone UTC"
      notify: httpd_restart

    - name: Configure Zabbix Host
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "# DBHost=localhost"
        line: "DBHost=localhost"

    - name: Configure Zabbix DBPassword
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "# DBPassword="
        line: "DBPassword={{ db_password | default('zabbix') }}"

  handlers:
    - name: httpd_restart
      service:
        name: httpd
        state: restarted
