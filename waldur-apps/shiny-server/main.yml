# -*- coding: utf-8; indent-tabs-mode: nil; tab-width: 2; -*-

---
- name: Start VM instances
  connection: local
  hosts: localhost
  tasks:
    - name: Start VM instances
      waldur_os_instance:
        access_token: "{{ access_token }}"
        api_url: "{{ api_url }}"
        data_volume_size: 1
        flavor: m1.little
        floating_ip: auto
        image: CentOS
        name: Waldur
        project: "{{ project_uuid }}"
        provider: "{{ provider_uuid }}"
        security_groups:
          - default
          - ping
          - ssh
        ssh_key: "{{ public_key_uuid }}"
        subnet: "{{ subnet_uuid }}"
        system_volume_size: 30
        tags: "{{ tags }}"
        wait: true
      register: vm_instance

    - name: Set instance facts
      set_fact:
        public_ip: "{{ vm_instance.instance.external_ips.0 }}"
      when: not ansible_check_mode

    - name: Add instance to dynamic inventory
      add_host:
        ansible_ssh_private_key_file: "{{ private_key_path }}"
        ansible_ssh_user: centos
        groups: created_vm_instances
        hostname: "{{ public_ip }}"
      when: not ansible_check_mode

    - name: Get SSH public key data
      uri:
        headers:
          Authorization: "Token {{ access_token }}"
        url: "{{ api_url }}keys/{{ user_key_uuid }}/"
      register: key_data
      when: not ansible_check_mode

    - name: Set SSH public key fact
      set_fact:
        public_key: "{{ key_data.json.public_key }}"
      when: not ansible_check_mode

    - name: Wait for instance to respond to SSH
      wait_for:
        delay: 10
        host: "{{ public_ip }}"
        port: 22
      when: not ansible_check_mode


- name: Add SSH public key to instance authorized keys
  become: yes
  hosts: created_vm_instances
  tasks:
    - name: Add SSH public key to instance authorized keys
      authorized_key:
        key: "{{ hostvars.localhost.public_key }}"
        state: present
        user: centos


- name: Install and configure Shiny Server
  hosts: created_vm_instances
  tasks:
    - name: Enable package repositories
      package:
        name: epel-release

    - name: Install packages | YUM
      package:
        name: "{{ item }}"
      with_items:
        - R
        - https://download3.rstudio.org/centos5.9/x86_64/shiny-server-1.5.3.838-rh5-x86_64.rpm

    - name: Install packages | R
      command: R -e "install.packages('{{ item }}', repos='https://cran.rstudio.com')"
        creates="/usr/lib64/R/library/{{ item }}"
      with_items:
        - rmarkdown
        - shiny

    - name: Enable and start services
      service:
        enabled: yes
        name: shiny-server
        state: started
