# -*- coding: utf-8; indent-tabs-mode: nil; tab-width: 2; -*-

---
- name: wait for JupyterHub to start
  wait_for:
    port: 8081
    delay: 20

- name: get access token of the first admin
  command: "jupyterhub token {{jupyterhub_admin_users[0].username | lower}}"
  args:
    chdir: "{{jupyter_vars.jupyterhub_dir}}"
  register: jupyter_hub_api_token_command_output

- name: get token from the command output
  set_fact:
    jupyter_hub_api_token: "{{jupyter_hub_api_token_command_output.stdout_lines | list | last}}"

- name: get list of users in the database
  uri:
    url: http://127.0.0.1:8081/hub/api/users
    method: GET
    headers:
      Authorization: "token {{jupyter_hub_api_token}}"
    return_content: yes
    body_format: json
  register: jupyter_hub_user_list

- name: initialize removed users list
  set_fact:
    removed_jupyter_hub_users: []

- name: build list of existing usernames
  set_fact:
    updated_username_list: "{{all_jupyterhub_users | map(attribute='username') | map('lower') | list}}"

- name: find removed users
  set_fact:
    removed_jupyter_hub_users: "{{removed_jupyter_hub_users}} + [{{item}}]"
  when: item.name not in updated_username_list
  with_items: "{{jupyter_hub_user_list.json}}"

- name: stop server instances of deleted users
  uri:
    url: "http://127.0.0.1:8081/hub/api/users/{{item.name}}/server"
    method: DELETE
    headers:
      Authorization: "token {{jupyter_hub_api_token}}"
    status_code: 202, 204
  when: item.server is not none
  with_items: "{{removed_jupyter_hub_users}}"

- name: wait for server instances to stop
  wait_for:
    timeout: 30

- name: delete removed users from the JupyterHub DB
  uri:
    url: "http://127.0.0.1:8081/hub/api/users/{{item.name}}"
    method: DELETE
    headers:
      Authorization: "token {{jupyter_hub_api_token}}"
    status_code: 204
  with_items: "{{removed_jupyter_hub_users}}"

- name: delete removed users from the OS if not OAuth config
  user:
    name: "{{item.name}}"
    state: absent
  with_items: "{{removed_jupyter_hub_users}}"
  when: oauth_config is not defined
